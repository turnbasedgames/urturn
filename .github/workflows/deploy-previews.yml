name: Deploy UrTurn Documentation and Website Per PR
on: pull_request
jobs:
  build:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - name: install and setup the monorepo dependencies
        run: |
          npm ci
          npx lerna bootstrap --hoist
      - name: build monorepo
        run: npx lerna run build
        env:
          REACT_APP_FIREBASE_CONFIG: ${{ secrets.REACT_APP_FIREBASE_CONFIG }}
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          REACT_APP_STRIPE_PUBLISHABLE_KEY: ${{ secrets.REACT_APP_STRIPE_PUBLISHABLE_KEY }}
      - uses: actions/cache@v3
        id: cache-build
        with:
          path: .
          key: ${{ github.run_id }}-build
          restore-keys: ${{ github.run_id }}-build
  lint:
    needs: build
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/cache@v3
        id: cache-build
        with:
          path: .
          key: ${{ github.run_id }}-build
          restore-keys: ${{ github.run_id }}-build
      - name: all packages (except templates/) need to have lint script defined in package.json
        run: ./bin/every-package-json.sh ".scripts.lint != null" '/templates/'
      - name: all packages (except templates/) need to have lint:fix script defined in package.json
        run: ./bin/every-package-json.sh '.scripts."lint:fix" != null' '/templates/'
      - name: checking if packages are formatted properly (lint)
        run: npx lerna run lint
  preview_docs:
    needs: build
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/cache@v3
        id: cache-build
        with:
          path: .
          key: ${{ github.run_id }}-build
          restore-keys: ${{ github.run_id }}-build
      - name: Deploy UrTurn Docs Preview ðŸš€
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DOCS }}'
          projectId: board-games-dev-e8c04
          entryPoint: docs
  preview_website:
    needs: build
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/cache@v3
        id: cache-build
        with:
          path: .
          key: ${{ github.run_id }}-build
          restore-keys: ${{ github.run_id }}-build
      - name: Deploy UrTurn Website Preview ðŸš€
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_BOARD_GAMES }}'
          projectId: board-games-io
          entryPoint: packages/website
  tests:
    needs: build
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/cache@v3
        id: cache-build
        with:
          path: .
          key: ${{ github.run_id }}-build
          restore-keys: ${{ github.run_id }}-build
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.2
          mongodb-replica-set: testrs
      - name: Start Redis
        uses: supercharge/redis-github-action@1.2.0
        with:
          redis-version: 6
      - name: run tests
        run: npx lerna run test:check-coverage
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
          GOOGLE_APPLICATION_CREDENTIALS_BASE64: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}
          STRIPE_KEY: ${{ secrets.STRIPE_KEY }}
          REDIS_URL: redis://localhost:6379
          MONGODB_CONNECTION_URL: mongodb://localhost:27017/test?replicaSet=testrs
  build-server-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build server docker image
        run: docker build --file services/server/Dockerfile .
