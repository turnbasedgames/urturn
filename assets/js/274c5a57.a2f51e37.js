"use strict";(self.webpackChunk_urturn_docs=self.webpackChunk_urturn_docs||[]).push([[7893],{5318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),d=o,v=p["".concat(c,".").concat(d)]||p[d]||m[d]||l;return n?r.createElement(v,a(a({ref:t},u),{},{components:n})):r.createElement(v,a({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<l;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9769:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(5773),o=(n(7378),n(5318));const l={title:"Client",description:"Simple client to leverage all of UrTurn infrastructure"},a="@UrTurn/client",i={unversionedId:"API/client",id:"API/client",title:"Client",description:"Simple client to leverage all of UrTurn infrastructure",source:"@site/docs/2-API/1-client.md",sourceDirName:"2-API",slug:"/API/client",permalink:"/docs/API/client",draft:!1,editUrl:"https://github.com/turnbasedgames/urturn/tree/main/docs/docs/2-API/1-client.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Client",description:"Simple client to leverage all of UrTurn infrastructure"},sidebar:"docs",previous:{title:"Room Functions",permalink:"/docs/API/room-functions"},next:{title:"Types",permalink:"/docs/API/types"}},c={},s=[{value:"Fields",id:"fields",level:2},{value:"<code>client.events</code> <strong>EventEmitter</strong>",id:"clientevents-eventemitter",level:3},{value:"<code>client.events.on(&#39;onStateChanged&#39;, (newRoomState: RoomState) =&gt; {})</code>",id:"clienteventsononstatechanged-newroomstate-roomstate--",level:4},{value:"Methods",id:"methods",level:2},{value:"<code>client.makeMove(move: Move)</code>",id:"clientmakemovemove-move",level:3},{value:"<code>client.getLocalPlayer()</code>",id:"clientgetlocalplayer",level:3},{value:"<code>client.getRoomState()</code>",id:"clientgetroomstate",level:3},{value:"<code>client.now()</code>",id:"clientnow",level:3},{value:"Types",id:"types",level:2},{value:"MoveResult",id:"moveresult",level:3}],u={toc:s};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"urturnclient"},"@UrTurn/client"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://badge.fury.io/js/@urturn%2Fclient"},(0,o.kt)("img",{parentName:"a",src:"https://badge.fury.io/js/@urturn%2Fclient.svg",alt:"npm version"}))),(0,o.kt)("h2",{id:"fields"},"Fields"),(0,o.kt)("h3",{id:"clientevents-eventemitter"},(0,o.kt)("inlineCode",{parentName:"h3"},"client.events")," ",(0,o.kt)("a",{parentName:"h3",href:"https://nodejs.org/api/events.html#class-eventemitter"},(0,o.kt)("strong",{parentName:"a"},"EventEmitter"))),(0,o.kt)("h4",{id:"clienteventsononstatechanged-newroomstate-roomstate--"},(0,o.kt)("inlineCode",{parentName:"h4"},"client.events.on('onStateChanged', (newRoomState: RoomState) => {})")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Calls the callback anytime the current ",(0,o.kt)("a",{parentName:"li",href:"/docs/API/types#roomstate"},"RoomState")," changes for the room")),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"clientmakemovemove-move"},(0,o.kt)("inlineCode",{parentName:"h3"},"client.makeMove(move: Move)")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/API/types#move"},"Move")," is any JSON serializable object"),(0,o.kt)("li",{parentName:"ul"},"returns ",(0,o.kt)("a",{parentName:"li",href:"#moveresult"},(0,o.kt)("inlineCode",{parentName:"a"},"Promise<MoveResult>"))," if the move is accepted")),(0,o.kt)("h3",{id:"clientgetlocalplayer"},(0,o.kt)("inlineCode",{parentName:"h3"},"client.getLocalPlayer()")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"returns the local player object")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You can tell if the local player is a spectator or a regular player if they are not in the players list. This will help you display a different view if the game is in spectator mode.")),(0,o.kt)("h3",{id:"clientgetroomstate"},(0,o.kt)("inlineCode",{parentName:"h3"},"client.getRoomState()")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"returns the current ",(0,o.kt)("a",{parentName:"li",href:"/docs/API/types#roomstate"},(0,o.kt)("inlineCode",{parentName:"a"},"RoomState")))),(0,o.kt)("h3",{id:"clientnow"},(0,o.kt)("inlineCode",{parentName:"h3"},"client.now()")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"returns the milliseconds from epoch (equivalent to ",(0,o.kt)("inlineCode",{parentName:"li"},"Date.now()"),")")),(0,o.kt)("admonition",{type:"success"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"client.now()")," is clocked synced with our servers. You ",(0,o.kt)("strong",{parentName:"p"},"should")," rely on this for timing mechanisms over the built in ",(0,o.kt)("inlineCode",{parentName:"p"},"Date.now()")," because the local user clock can be off by seconds or even minutes!")),(0,o.kt)("h2",{id:"types"},"Types"),(0,o.kt)("h3",{id:"moveresult"},"MoveResult"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"error"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Error")," object if an error occurred"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"undefined")," if no error ocurred"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"success"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"true")," if successful (no error ocurred)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"undefined")," if an error occurred")))),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// successful move\n{\n  "success": true\n}\n// error occurred\n{\n  "error": {\n    "name": "invalid move",\n    "message": "player billy made an invalid move, it wasn\'t their turn\n  }\n}\n')))}m.isMDXComponent=!0}}]);