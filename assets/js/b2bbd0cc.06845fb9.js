"use strict";(self.webpackChunk_urturn_docs=self.webpackChunk_urturn_docs||[]).push([[4841],{5318:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7194:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(5773),a=(n(7378),n(5318));const o={description:"Quickly generate a new UrTurn Game"},i="Generate a Game",c={unversionedId:"Getting-Started/runner-init",id:"Getting-Started/runner-init",title:"Generate a Game",description:"Quickly generate a new UrTurn Game",source:"@site/docs/1-Getting-Started/0-runner-init.md",sourceDirName:"1-Getting-Started",slug:"/Getting-Started/runner-init",permalink:"/docs/Getting-Started/runner-init",draft:!1,editUrl:"https://github.com/turnbasedgames/urturn/tree/main/docs/docs/1-Getting-Started/0-runner-init.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{description:"Quickly generate a new UrTurn Game"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/category/getting-started"},next:{title:"TicTacToe Tutorial",permalink:"/docs/Getting-Started/tictactoe"}},u={},l=[{value:"Create Game",id:"create-game",level:2},{value:"File/Folder structure",id:"filefolder-structure",level:2},{value:"GitHub Actions in <code>.github/workflows</code>",id:"github-actions-in-githubworkflows",level:2}],s={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"generate-a-game"},"Generate a Game"),(0,a.kt)("admonition",{type:"success"},(0,a.kt)("p",{parentName:"admonition"},"Understand what ",(0,a.kt)("a",{parentName:"p",href:"/docs"},"UrTurn is and isn't"),".")),(0,a.kt)("h2",{id:"create-game"},"Create Game"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx @urturn/runner init my-game # generates new game files\ncd my-game\nnpm run dev # run the game locally\n")),(0,a.kt)("h2",{id:"filefolder-structure"},"File/Folder structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"game\n\u2502   package.json # npm package specification for dependencies for your room functions (includes @urturn/runner for local development)\n\u2502\n\u2514\u2500\u2500\u2500.github/workflows # contains important GitHub actions that create a build artifact for UrTurn to use\n\u2502\n\u2514\u2500\u2500\u2500src\n\u2502   \u2502   main.js # room functions (e.g. onRoomStart, onPlayerMove, etc.)\n\u2502   \n\u2514\u2500\u2500\u2500frontend # holds all the files related to your game frontend\n    \u2502   package.json  # npm package specification for dependencies on your frontend (includes @urturn/client)\n    \u2502   ...your frontend files\n")),(0,a.kt)("h2",{id:"github-actions-in-githubworkflows"},"GitHub Actions in ",(0,a.kt)("inlineCode",{parentName:"h2"},".github/workflows")),(0,a.kt)("admonition",{type:"success"},(0,a.kt)("p",{parentName:"admonition"},"No ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/features/actions"},"GitHub Actions")," experience needed!"),(0,a.kt)("p",{parentName:"admonition"},"We've already done the hard work for you. When you ran ",(0,a.kt)("inlineCode",{parentName:"p"},"npx @urturn/runner init my-game"),", the correct github actions were created for you.")),(0,a.kt)("p",null,"When you ",(0,a.kt)("inlineCode",{parentName:"p"},"push")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," branch of your repo on GitHub, the actions will automatically create the correct ",(0,a.kt)("a",{parentName:"p",href:"/docs/Getting-Started/Deploying-Your-Game#build-artifact-spec"},"Artifact structure")," on the ",(0,a.kt)("inlineCode",{parentName:"p"},"published")," branch, which you will use to ",(0,a.kt)("a",{parentName:"p",href:"/docs/Getting-Started/Deploying-Your-Game"},"deploy to production"),"."))}p.isMDXComponent=!0}}]);